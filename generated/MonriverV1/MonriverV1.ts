// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Delegated extends ethereum.Event {
  get params(): Delegated__Params {
    return new Delegated__Params(this);
  }
}

export class Delegated__Params {
  _event: Delegated;

  constructor(event: Delegated) {
    this._event = event;
  }

  get who(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get target(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Proposed extends ethereum.Event {
  get params(): Proposed__Params {
    return new Proposed__Params(this);
  }
}

export class Proposed__Params {
  _event: Proposed;

  constructor(event: Proposed) {
    this._event = event;
  }

  get proposalIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get deposit(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Seconded extends ethereum.Event {
  get params(): Seconded__Params {
    return new Seconded__Params(this);
  }
}

export class Seconded__Params {
  _event: Seconded;

  constructor(event: Seconded) {
    this._event = event;
  }

  get proposalIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get seconder(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class StandardVote extends ethereum.Event {
  get params(): StandardVote__Params {
    return new StandardVote__Params(this);
  }
}

export class StandardVote__Params {
  _event: StandardVote;

  constructor(event: StandardVote) {
    this._event = event;
  }

  get referendumIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get aye(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get voteAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get conviction(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class Undelegated extends ethereum.Event {
  get params(): Undelegated__Params {
    return new Undelegated__Params(this);
  }
}

export class Undelegated__Params {
  _event: Undelegated;

  constructor(event: Undelegated) {
    this._event = event;
  }

  get who(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MonriverV1__finishedReferendumInfoResult {
  value0: boolean;
  value1: BigInt;

  constructor(value0: boolean, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getValue0(): boolean {
    return this.value0;
  }

  getValue1(): BigInt {
    return this.value1;
  }
}

export class MonriverV1__ongoingReferendumInfoResult {
  value0: BigInt;
  value1: Bytes;
  value2: i32;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;

  constructor(
    value0: BigInt,
    value1: Bytes,
    value2: i32,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    map.set(
      "value2",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value2))
    );
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): Bytes {
    return this.value1;
  }

  getValue2(): i32 {
    return this.value2;
  }

  getValue3(): BigInt {
    return this.value3;
  }

  getValue4(): BigInt {
    return this.value4;
  }

  getValue5(): BigInt {
    return this.value5;
  }

  getValue6(): BigInt {
    return this.value6;
  }
}

export class MonriverV1 extends ethereum.SmartContract {
  static bind(address: Address): MonriverV1 {
    return new MonriverV1("MonriverV1", address);
  }

  depositOf(propIndex: BigInt): BigInt {
    let result = super.call("depositOf", "depositOf(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(propIndex)
    ]);

    return result[0].toBigInt();
  }

  try_depositOf(propIndex: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("depositOf", "depositOf(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(propIndex)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  finishedReferendumInfo(
    refIndex: BigInt
  ): MonriverV1__finishedReferendumInfoResult {
    let result = super.call(
      "finishedReferendumInfo",
      "finishedReferendumInfo(uint32):(bool,uint256)",
      [ethereum.Value.fromUnsignedBigInt(refIndex)]
    );

    return new MonriverV1__finishedReferendumInfoResult(
      result[0].toBoolean(),
      result[1].toBigInt()
    );
  }

  try_finishedReferendumInfo(
    refIndex: BigInt
  ): ethereum.CallResult<MonriverV1__finishedReferendumInfoResult> {
    let result = super.tryCall(
      "finishedReferendumInfo",
      "finishedReferendumInfo(uint32):(bool,uint256)",
      [ethereum.Value.fromUnsignedBigInt(refIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MonriverV1__finishedReferendumInfoResult(
        value[0].toBoolean(),
        value[1].toBigInt()
      )
    );
  }

  lowestUnbaked(): BigInt {
    let result = super.call("lowestUnbaked", "lowestUnbaked():(uint256)", []);

    return result[0].toBigInt();
  }

  try_lowestUnbaked(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lowestUnbaked",
      "lowestUnbaked():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ongoingReferendumInfo(
    refIndex: BigInt
  ): MonriverV1__ongoingReferendumInfoResult {
    let result = super.call(
      "ongoingReferendumInfo",
      "ongoingReferendumInfo(uint32):(uint256,bytes32,uint8,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(refIndex)]
    );

    return new MonriverV1__ongoingReferendumInfoResult(
      result[0].toBigInt(),
      result[1].toBytes(),
      result[2].toI32(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt()
    );
  }

  try_ongoingReferendumInfo(
    refIndex: BigInt
  ): ethereum.CallResult<MonriverV1__ongoingReferendumInfoResult> {
    let result = super.tryCall(
      "ongoingReferendumInfo",
      "ongoingReferendumInfo(uint32):(uint256,bytes32,uint8,uint256,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(refIndex)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new MonriverV1__ongoingReferendumInfoResult(
        value[0].toBigInt(),
        value[1].toBytes(),
        value[2].toI32(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt()
      )
    );
  }

  publicPropCount(): BigInt {
    let result = super.call(
      "publicPropCount",
      "publicPropCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_publicPropCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "publicPropCount",
      "publicPropCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class DelegateCall extends ethereum.Call {
  get inputs(): DelegateCall__Inputs {
    return new DelegateCall__Inputs(this);
  }

  get outputs(): DelegateCall__Outputs {
    return new DelegateCall__Outputs(this);
  }
}

export class DelegateCall__Inputs {
  _call: DelegateCall;

  constructor(call: DelegateCall) {
    this._call = call;
  }

  get representative(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get conviction(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class DelegateCall__Outputs {
  _call: DelegateCall;

  constructor(call: DelegateCall) {
    this._call = call;
  }
}

export class NoteImminentPreimageCall extends ethereum.Call {
  get inputs(): NoteImminentPreimageCall__Inputs {
    return new NoteImminentPreimageCall__Inputs(this);
  }

  get outputs(): NoteImminentPreimageCall__Outputs {
    return new NoteImminentPreimageCall__Outputs(this);
  }
}

export class NoteImminentPreimageCall__Inputs {
  _call: NoteImminentPreimageCall;

  constructor(call: NoteImminentPreimageCall) {
    this._call = call;
  }

  get encodedProposal(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class NoteImminentPreimageCall__Outputs {
  _call: NoteImminentPreimageCall;

  constructor(call: NoteImminentPreimageCall) {
    this._call = call;
  }
}

export class NotePreimageCall extends ethereum.Call {
  get inputs(): NotePreimageCall__Inputs {
    return new NotePreimageCall__Inputs(this);
  }

  get outputs(): NotePreimageCall__Outputs {
    return new NotePreimageCall__Outputs(this);
  }
}

export class NotePreimageCall__Inputs {
  _call: NotePreimageCall;

  constructor(call: NotePreimageCall) {
    this._call = call;
  }

  get encodedProposal(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class NotePreimageCall__Outputs {
  _call: NotePreimageCall;

  constructor(call: NotePreimageCall) {
    this._call = call;
  }
}

export class ProposeCall extends ethereum.Call {
  get inputs(): ProposeCall__Inputs {
    return new ProposeCall__Inputs(this);
  }

  get outputs(): ProposeCall__Outputs {
    return new ProposeCall__Outputs(this);
  }
}

export class ProposeCall__Inputs {
  _call: ProposeCall;

  constructor(call: ProposeCall) {
    this._call = call;
  }

  get proposalHash(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get value(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ProposeCall__Outputs {
  _call: ProposeCall;

  constructor(call: ProposeCall) {
    this._call = call;
  }
}

export class RemoveVoteCall extends ethereum.Call {
  get inputs(): RemoveVoteCall__Inputs {
    return new RemoveVoteCall__Inputs(this);
  }

  get outputs(): RemoveVoteCall__Outputs {
    return new RemoveVoteCall__Outputs(this);
  }
}

export class RemoveVoteCall__Inputs {
  _call: RemoveVoteCall;

  constructor(call: RemoveVoteCall) {
    this._call = call;
  }

  get refIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveVoteCall__Outputs {
  _call: RemoveVoteCall;

  constructor(call: RemoveVoteCall) {
    this._call = call;
  }
}

export class SecondCall extends ethereum.Call {
  get inputs(): SecondCall__Inputs {
    return new SecondCall__Inputs(this);
  }

  get outputs(): SecondCall__Outputs {
    return new SecondCall__Outputs(this);
  }
}

export class SecondCall__Inputs {
  _call: SecondCall;

  constructor(call: SecondCall) {
    this._call = call;
  }

  get propIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get secondsUpperBound(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SecondCall__Outputs {
  _call: SecondCall;

  constructor(call: SecondCall) {
    this._call = call;
  }
}

export class StandardVoteCall extends ethereum.Call {
  get inputs(): StandardVoteCall__Inputs {
    return new StandardVoteCall__Inputs(this);
  }

  get outputs(): StandardVoteCall__Outputs {
    return new StandardVoteCall__Outputs(this);
  }
}

export class StandardVoteCall__Inputs {
  _call: StandardVoteCall;

  constructor(call: StandardVoteCall) {
    this._call = call;
  }

  get refIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get aye(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }

  get voteAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get conviction(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class StandardVoteCall__Outputs {
  _call: StandardVoteCall;

  constructor(call: StandardVoteCall) {
    this._call = call;
  }
}

export class UnDelegateCall extends ethereum.Call {
  get inputs(): UnDelegateCall__Inputs {
    return new UnDelegateCall__Inputs(this);
  }

  get outputs(): UnDelegateCall__Outputs {
    return new UnDelegateCall__Outputs(this);
  }
}

export class UnDelegateCall__Inputs {
  _call: UnDelegateCall;

  constructor(call: UnDelegateCall) {
    this._call = call;
  }
}

export class UnDelegateCall__Outputs {
  _call: UnDelegateCall;

  constructor(call: UnDelegateCall) {
    this._call = call;
  }
}

export class UnlockCall extends ethereum.Call {
  get inputs(): UnlockCall__Inputs {
    return new UnlockCall__Inputs(this);
  }

  get outputs(): UnlockCall__Outputs {
    return new UnlockCall__Outputs(this);
  }
}

export class UnlockCall__Inputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }

  get target(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnlockCall__Outputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}
