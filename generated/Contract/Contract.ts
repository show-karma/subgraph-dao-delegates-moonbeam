// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Delegated extends ethereum.Event {
  get params(): Delegated__Params {
    return new Delegated__Params(this);
  }
}

export class Delegated__Params {
  _event: Delegated;

  constructor(event: Delegated) {
    this._event = event;
  }

  get trackId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get from(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get delegatedAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get conviction(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class Undelegated extends ethereum.Event {
  get params(): Undelegated__Params {
    return new Undelegated__Params(this);
  }
}

export class Undelegated__Params {
  _event: Undelegated;

  constructor(event: Undelegated) {
    this._event = event;
  }

  get trackId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Unlocked extends ethereum.Event {
  get params(): Unlocked__Params {
    return new Unlocked__Params(this);
  }
}

export class Unlocked__Params {
  _event: Unlocked;

  constructor(event: Unlocked) {
    this._event = event;
  }

  get trackId(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class VoteRemoved extends ethereum.Event {
  get params(): VoteRemoved__Params {
    return new VoteRemoved__Params(this);
  }
}

export class VoteRemoved__Params {
  _event: VoteRemoved;

  constructor(event: VoteRemoved) {
    this._event = event;
  }

  get pollIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class VoteRemovedForTrack extends ethereum.Event {
  get params(): VoteRemovedForTrack__Params {
    return new VoteRemovedForTrack__Params(this);
  }
}

export class VoteRemovedForTrack__Params {
  _event: VoteRemovedForTrack;

  constructor(event: VoteRemovedForTrack) {
    this._event = event;
  }

  get pollIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get trackId(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get voter(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class VoteRemovedOther extends ethereum.Event {
  get params(): VoteRemovedOther__Params {
    return new VoteRemovedOther__Params(this);
  }
}

export class VoteRemovedOther__Params {
  _event: VoteRemovedOther;

  constructor(event: VoteRemovedOther) {
    this._event = event;
  }

  get pollIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get target(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get trackId(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class VoteSplit extends ethereum.Event {
  get params(): VoteSplit__Params {
    return new VoteSplit__Params(this);
  }
}

export class VoteSplit__Params {
  _event: VoteSplit;

  constructor(event: VoteSplit) {
    this._event = event;
  }

  get pollIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get aye(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get nay(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class VoteSplitAbstained extends ethereum.Event {
  get params(): VoteSplitAbstained__Params {
    return new VoteSplitAbstained__Params(this);
  }
}

export class VoteSplitAbstained__Params {
  _event: VoteSplitAbstained;

  constructor(event: VoteSplitAbstained) {
    this._event = event;
  }

  get pollIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get aye(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get nay(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get abstain(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Voted extends ethereum.Event {
  get params(): Voted__Params {
    return new Voted__Params(this);
  }
}

export class Voted__Params {
  _event: Voted;

  constructor(event: Voted) {
    this._event = event;
  }

  get pollIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get voter(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get aye(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get voteAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get conviction(): i32 {
    return this._event.parameters[4].value.toI32();
  }
}

export class Contract__votingForResultValue0Struct extends ethereum.Tuple {
  get trackId(): i32 {
    return this[0].toI32();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  classLocksFor(who: Address): BigInt {
    let result = super.call(
      "classLocksFor",
      "classLocksFor(address):(uint256)",
      [ethereum.Value.fromAddress(who)]
    );

    return result[0].toBigInt();
  }

  try_classLocksFor(who: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "classLocksFor",
      "classLocksFor(address):(uint256)",
      [ethereum.Value.fromAddress(who)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  votingFor(
    who: Address,
    trackId: i32
  ): Array<Contract__votingForResultValue0Struct> {
    let result = super.call(
      "votingFor",
      "votingFor(address,uint16):((uint16,uint256)[])",
      [
        ethereum.Value.fromAddress(who),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(trackId))
      ]
    );

    return result[0].toTupleArray<Contract__votingForResultValue0Struct>();
  }

  try_votingFor(
    who: Address,
    trackId: i32
  ): ethereum.CallResult<Array<Contract__votingForResultValue0Struct>> {
    let result = super.tryCall(
      "votingFor",
      "votingFor(address,uint16):((uint16,uint256)[])",
      [
        ethereum.Value.fromAddress(who),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(trackId))
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Contract__votingForResultValue0Struct>()
    );
  }
}

export class DelegateCall extends ethereum.Call {
  get inputs(): DelegateCall__Inputs {
    return new DelegateCall__Inputs(this);
  }

  get outputs(): DelegateCall__Outputs {
    return new DelegateCall__Outputs(this);
  }
}

export class DelegateCall__Inputs {
  _call: DelegateCall;

  constructor(call: DelegateCall) {
    this._call = call;
  }

  get trackId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get representative(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get conviction(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get amount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class DelegateCall__Outputs {
  _call: DelegateCall;

  constructor(call: DelegateCall) {
    this._call = call;
  }
}

export class RemoveOtherVoteCall extends ethereum.Call {
  get inputs(): RemoveOtherVoteCall__Inputs {
    return new RemoveOtherVoteCall__Inputs(this);
  }

  get outputs(): RemoveOtherVoteCall__Outputs {
    return new RemoveOtherVoteCall__Outputs(this);
  }
}

export class RemoveOtherVoteCall__Inputs {
  _call: RemoveOtherVoteCall;

  constructor(call: RemoveOtherVoteCall) {
    this._call = call;
  }

  get target(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get trackId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get pollIndex(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class RemoveOtherVoteCall__Outputs {
  _call: RemoveOtherVoteCall;

  constructor(call: RemoveOtherVoteCall) {
    this._call = call;
  }
}

export class RemoveVoteCall extends ethereum.Call {
  get inputs(): RemoveVoteCall__Inputs {
    return new RemoveVoteCall__Inputs(this);
  }

  get outputs(): RemoveVoteCall__Outputs {
    return new RemoveVoteCall__Outputs(this);
  }
}

export class RemoveVoteCall__Inputs {
  _call: RemoveVoteCall;

  constructor(call: RemoveVoteCall) {
    this._call = call;
  }

  get pollIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveVoteCall__Outputs {
  _call: RemoveVoteCall;

  constructor(call: RemoveVoteCall) {
    this._call = call;
  }
}

export class RemoveVoteForTrackCall extends ethereum.Call {
  get inputs(): RemoveVoteForTrackCall__Inputs {
    return new RemoveVoteForTrackCall__Inputs(this);
  }

  get outputs(): RemoveVoteForTrackCall__Outputs {
    return new RemoveVoteForTrackCall__Outputs(this);
  }
}

export class RemoveVoteForTrackCall__Inputs {
  _call: RemoveVoteForTrackCall;

  constructor(call: RemoveVoteForTrackCall) {
    this._call = call;
  }

  get pollIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get trackId(): i32 {
    return this._call.inputValues[1].value.toI32();
  }
}

export class RemoveVoteForTrackCall__Outputs {
  _call: RemoveVoteForTrackCall;

  constructor(call: RemoveVoteForTrackCall) {
    this._call = call;
  }
}

export class UndelegateCall extends ethereum.Call {
  get inputs(): UndelegateCall__Inputs {
    return new UndelegateCall__Inputs(this);
  }

  get outputs(): UndelegateCall__Outputs {
    return new UndelegateCall__Outputs(this);
  }
}

export class UndelegateCall__Inputs {
  _call: UndelegateCall;

  constructor(call: UndelegateCall) {
    this._call = call;
  }

  get trackId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class UndelegateCall__Outputs {
  _call: UndelegateCall;

  constructor(call: UndelegateCall) {
    this._call = call;
  }
}

export class UnlockCall extends ethereum.Call {
  get inputs(): UnlockCall__Inputs {
    return new UnlockCall__Inputs(this);
  }

  get outputs(): UnlockCall__Outputs {
    return new UnlockCall__Outputs(this);
  }
}

export class UnlockCall__Inputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }

  get trackId(): i32 {
    return this._call.inputValues[0].value.toI32();
  }

  get target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UnlockCall__Outputs {
  _call: UnlockCall;

  constructor(call: UnlockCall) {
    this._call = call;
  }
}

export class VoteNoCall extends ethereum.Call {
  get inputs(): VoteNoCall__Inputs {
    return new VoteNoCall__Inputs(this);
  }

  get outputs(): VoteNoCall__Outputs {
    return new VoteNoCall__Outputs(this);
  }
}

export class VoteNoCall__Inputs {
  _call: VoteNoCall;

  constructor(call: VoteNoCall) {
    this._call = call;
  }

  get pollIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get voteAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get conviction(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class VoteNoCall__Outputs {
  _call: VoteNoCall;

  constructor(call: VoteNoCall) {
    this._call = call;
  }
}

export class VoteSplitCall extends ethereum.Call {
  get inputs(): VoteSplitCall__Inputs {
    return new VoteSplitCall__Inputs(this);
  }

  get outputs(): VoteSplitCall__Outputs {
    return new VoteSplitCall__Outputs(this);
  }
}

export class VoteSplitCall__Inputs {
  _call: VoteSplitCall;

  constructor(call: VoteSplitCall) {
    this._call = call;
  }

  get pollIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get aye(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get nay(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class VoteSplitCall__Outputs {
  _call: VoteSplitCall;

  constructor(call: VoteSplitCall) {
    this._call = call;
  }
}

export class VoteSplitAbstainCall extends ethereum.Call {
  get inputs(): VoteSplitAbstainCall__Inputs {
    return new VoteSplitAbstainCall__Inputs(this);
  }

  get outputs(): VoteSplitAbstainCall__Outputs {
    return new VoteSplitAbstainCall__Outputs(this);
  }
}

export class VoteSplitAbstainCall__Inputs {
  _call: VoteSplitAbstainCall;

  constructor(call: VoteSplitAbstainCall) {
    this._call = call;
  }

  get pollIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get aye(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get nay(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get abstain(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class VoteSplitAbstainCall__Outputs {
  _call: VoteSplitAbstainCall;

  constructor(call: VoteSplitAbstainCall) {
    this._call = call;
  }
}

export class VoteYesCall extends ethereum.Call {
  get inputs(): VoteYesCall__Inputs {
    return new VoteYesCall__Inputs(this);
  }

  get outputs(): VoteYesCall__Outputs {
    return new VoteYesCall__Outputs(this);
  }
}

export class VoteYesCall__Inputs {
  _call: VoteYesCall;

  constructor(call: VoteYesCall) {
    this._call = call;
  }

  get pollIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get voteAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get conviction(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class VoteYesCall__Outputs {
  _call: VoteYesCall;

  constructor(call: VoteYesCall) {
    this._call = call;
  }
}
